// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaleEngine.Data;

namespace TaleEngine.Data.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20191009133730_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TaleEngine.Data.Contracts.Entities.Activity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreateDateTime");

                    b.Property<Guid?>("CreateUserId");

                    b.Property<Guid>("CreatorId");

                    b.Property<string>("Description");

                    b.Property<int>("EventId");

                    b.Property<string>("Image");

                    b.Property<Guid?>("LasModificationUserId");

                    b.Property<DateTime?>("LastModificationDateTime");

                    b.Property<int>("Places");

                    b.Property<int>("StatusId");

                    b.Property<string>("Title");

                    b.Property<int>("TypeId");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.HasIndex("StatusId");

                    b.HasIndex("TypeId");

                    b.ToTable("Activity");
                });

            modelBuilder.Entity("TaleEngine.Data.Contracts.Entities.ActivityStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreateDateTime");

                    b.Property<Guid?>("CreateUserId");

                    b.Property<string>("Description");

                    b.Property<Guid?>("LasModificationUserId");

                    b.Property<DateTime?>("LastModificationDateTime");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("ActivityStatus");

                    b.HasData(
                        new { Id = 1, Description = "Waiting for approval", Name = "Pending" },
                        new { Id = 2, Description = "Accepted and waiting for participants", Name = "Active" }
                    );
                });

            modelBuilder.Entity("TaleEngine.Data.Contracts.Entities.ActivityType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreateDateTime");

                    b.Property<Guid?>("CreateUserId");

                    b.Property<string>("Description");

                    b.Property<Guid?>("LasModificationUserId");

                    b.Property<DateTime?>("LastModificationDateTime");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("ActivityType");

                    b.HasData(
                        new { Id = 1, Description = "Tabletop roleplaying game session", Name = "TTRPG" },
                        new { Id = 2, Description = "Board games for everyone!", Name = "BoardGames" }
                    );
                });

            modelBuilder.Entity("TaleEngine.Data.Contracts.Entities.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreateDateTime");

                    b.Property<Guid?>("CreateUserId");

                    b.Property<Guid?>("LasModificationUserId");

                    b.Property<DateTime?>("LastModificationDateTime");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("Event");
                });

            modelBuilder.Entity("TaleEngine.Data.Contracts.Entities.Activity", b =>
                {
                    b.HasOne("TaleEngine.Data.Contracts.Entities.Event", "Event")
                        .WithMany("Activities")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TaleEngine.Data.Contracts.Entities.ActivityStatus", "Status")
                        .WithMany("Activities")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TaleEngine.Data.Contracts.Entities.ActivityType", "Type")
                        .WithMany("Activities")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
